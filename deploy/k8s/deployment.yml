apiVersion: apps/v1
kind: Deployment
metadata:
  name: novelty-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: novelty-app
  template:
    metadata:
      labels:
        app: novelty-app
    spec:
      containers:
        - name: novelty-app
          image: ciaa/anomaly:0.1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8501
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ping
              port: 8501
          resources:
            limits:
              memory: "2000Mi"
            requests:
              memory: "2000Mi"
              cpu: "2000m"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault     
---
apiVersion: v1
kind: Service
metadata:
  name: novelty-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: novelty-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8501
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: novelty-ingress
  namespace: default
  annotations:
    cert-manager.io/issuer: "letsencrypt-staging"
    acme.cert-manager.io/http01-edit-in-place: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ionos.ingress-nginx.com
    secretName: letsencrypt-tls  
  rules:
  - host: ionos.ingress-nginx.com
    http:
      paths:
      - path: /novelty(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: novelty-service
            port:
              number: 80